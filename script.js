let helyesSzam = '';
let hi√°nyz√≥Index = -1;
let tippSzamlalo = 0;
let jatekElkezdodott = false;

// K√©plet a magyar szem√©lyi azonos√≠t√≥ ellen≈ërz≈ë sz√°mjegy√©nek k√©pz√©s√©hez (egyszer≈±s√≠tve)
// Az (1*S1 + 2*S2 + ... + 10*S10) √∂sszeg 11-gyel val√≥ oszt√°si marad√©ka
// egyenl≈ë a K (S11) sz√°mjegy √©rt√©k√©vel, ha S11 < 10.
// Az ellen≈ërz≈ë sz√°mjegy (K) k√©pz√©s√©nek pontos szab√°lyai bonyolultabbak (pl. 11-es marad√©k eset√©n nem lehet 10 a sorsz√°m),
// de a j√°t√©khoz elegend≈ë a k√©plet ford√≠tott haszn√°lata.
function ellenorzoSzamjegyKalkulacio(szamTomb) {
    let osszeg = 0;
    for (let i = 0; i < 10; i++) {
        // A s√∫lyok 1-t≈ël 10-ig mennek: 1*S1, 2*S2, ..., 10*S10
        osszeg += (i + 1) * szamTomb[i];
    }
    const maradek = osszeg % 11;

    // Ha a marad√©k 10, akkor az ellen≈ërz≈ë sz√°mjegy k√©pz√©se bonyolultabb,
    // de az egyszer≈± gener√°l√°s kedv√©√©rt ezt a sz√°mot elvetj√ºk/korrig√°ljuk,
    // VAGY az ellen≈ërz≈ë sz√°mjegy 10-es marad√©k eset√©n 0, ha a sorsz√°m nem 999.
    // A val√≥s√°gban ilyenkor a sorsz√°mot nem adj√°k ki. A j√°t√©kban most csak 0-9 k√∂z√∂tti K-t gener√°lunk.
    return (maradek === 10) ? -1 : maradek; // -1-et ad vissza, ha √©rv√©nytelen lenne a form√°tum
}

// V√©letlen szem√©lyi azonos√≠t√≥ gener√°l√°sa a form√°tumot (M √â√âHHNN SSSK) k√∂vetve
function generalSzemelyiSzam() {
    let szam = [];

    // 1. jegy (M): Pl. 1=1900-as f√©rfi, 2=1900-as n≈ë, 3=2000-es f√©rfi, 4=2000-es n≈ë.
    // A d√°tummal √∂sszhangban kell lennie, de itt most egyszer≈±s√≠t√ºnk
    szam[0] = Math.floor(Math.random() * 4) + 1; // 1, 2, 3 vagy 4

    // 2-7. jegyek (√â√âHHNN): Sz√ºlet√©si d√°tum
    // √â√â: 00-99 (a gener√°lt M-t≈ël f√ºgg≈ëen: 1/2 eset√©n pl. 00-99; 3/4 eset√©n pl. 00-25 (a j√∂v≈ëbe ne menj√ºnk)
    let evUtolsoKetJegy;
    let evszam;
    if (szam[0] === 1 || szam[0] === 2) {
        evUtolsoKetJegy = Math.floor(Math.random() * 97); // 00-96
        evszam = 1900 + evUtolsoKetJegy;
    } else {
        evUtolsoKetJegy = Math.floor(Math.random() * 26); // 00-25
        evszam = 2000 + evUtolsoKetJegy;
    }
    szam[1] = Math.floor(evUtolsoKetJegy / 10);
    szam[2] = evUtolsoKetJegy % 10;

    // HHNN: H√≥nap, Nap
    let honap = Math.floor(Math.random() * 12) + 1; // 1-12
    let nap;
    if (honap === 2) {
        // Sz√∂k≈ë√©v ellen≈ërz√©s kihagyva az egyszer≈±s√©g kedv√©√©rt
        nap = Math.floor(Math.random() * 28) + 1;
    } else if ([4, 6, 9, 11].includes(honap)) {
        nap = Math.floor(Math.random() * 30) + 1;
    } else {
        nap = Math.floor(Math.random() * 31) + 1;
    }

    szam[3] = Math.floor(honap / 10);
    szam[4] = honap % 10;
    szam[5] = Math.floor(nap / 10);
    szam[6] = nap % 10;

    // 8-10. jegyek (SSS): Sorsz√°m (000-999), 100-300 gener√°l√°sa
    let sorszam = Math.floor(Math.random() * 300) + 100; // 100-399
    szam[7] = Math.floor(sorszam / 100);
    szam[8] = Math.floor((sorszam % 100) / 10);
    szam[9] = sorszam % 10;

    // 11. jegy (K): Ellen≈ërz≈ë sz√°mjegy
    const elsoTizSzam = szam.slice(0, 10);
    let K = ellenorzoSzamjegyKalkulacio(elsoTizSzam);

    // Ha a K k√©pz√©s eredm√©nye 10 (vagy -1), √∫j sz√°mot gener√°lunk, mert ez a form√°tum nem adhat√≥ ki.
    if (K === -1) {
        return generalSzemelyiSzam();
    }

    szam[10] = K;

    return szam.join('');
}

// A szem√©lyi sz√°m megjelen√≠t√©se a hi√°nyz√≥ sz√°mjeggyel
function megjelenitSzam(szam, hianyzoIndex) {
    const display = document.getElementById('szam-megjelenito');
    display.innerHTML = '';

    // Szigor√∫an 11 sz√°mjegyet jelen√≠t√ºnk meg
    for (let i = 0; i < 11; i++) {
        let jegy = szam.charAt(i);
        let span = document.createElement('span');
        span.classList.add('szamjegy');

        if (i === hianyzoIndex) {
            span.textContent = '?';
            span.classList.add('hianyzo');
        } else {
            span.textContent = jegy;
        }

        // Form√°tum megjelen√≠t√©se sz√≥k√∂z√∂kkel: M √â√âHHNN SSSK
        if (i === 0 || i === 6 || i === 9) {
            span.style.marginRight = '10px';
        }

        display.appendChild(span);
    }
}

// J√°t√©k inicializ√°l√°sa
function ujJatek() {
    tippSzamlalo = 0;
    document.getElementById('tipp-szamlalo').textContent = tippSzamlalo;
    document.getElementById('visszajelzes').textContent = '';
    document.getElementById('visszajelzes').className = '';
    document.getElementById('jatek-terulet').style.display = 'block';
    jatekElkezdodott = true;

    // Helyes sz√°m gener√°l√°sa
    helyesSzam = generalSzemelyiSzam();

    // V√©letlen hi√°nyz√≥ index kiv√°laszt√°sa (az utols√≥ ellen≈ërz≈ë sz√°mjegy nagyobb es√©llyel hi√°nyzik)
    const randomFaktor = Math.random();
    if (randomFaktor < 0.3) {
        // Ellen≈ërz≈ë sz√°mjegy hi√°nyzik (K)
        hi√°nyz√≥Index = 10;
    } else if (randomFaktor < 0.6) {
        // D√°tum r√©sz hi√°nyzik (√â√âHHNN)
        hi√°nyz√≥Index = Math.floor(Math.random() * 6) + 1; // 1-t≈ël 6-ig
    } else {
        // Egy√©b jegy hi√°nyzik
        hi√°nyz√≥Index = Math.floor(Math.random() * 10); // 0-t√≥l 9-ig
    }

    // Megjelen√≠t√©s a hi√°nyz√≥ r√©sszel
    megjelenitSzam(helyesSzam, hi√°nyz√≥Index);
}

// Tipp ellen≈ërz√©se
function tippEllenorzes() {
    if (!jatekElkezdodott) {
        document.getElementById('visszajelzes').textContent = 'Kattints az "√öj Sz√°m" gombra a kezd√©shez!';
        document.getElementById('visszajelzes').className = 'rossz-tipp';
        return;
    }

    const tippInput = document.getElementById('tipp');
    const tippErtek = tippInput.value;

    if (tippErtek === '' || isNaN(tippErtek) || tippErtek.length !== 1) {
        document.getElementById('visszajelzes').textContent = 'K√©rlek, adj meg egyetlen sz√°mjegyet (0-9).';
        document.getElementById('visszajelzes').className = 'rossz-tipp';
        return;
    }

    tippSzamlalo++;
    document.getElementById('tipp-szamlalo').textContent = tippSzamlalo;

    const helyesJegy = helyesSzam.charAt(hi√°nyz√≥Index);
    const visszajelzes = document.getElementById('visszajelzes');

    if (tippErtek === helyesJegy) {
        // Helyes tipp
        visszajelzes.textContent = `Gratul√°lok! üéâ Elgondolkodva a megold√°s: ${helyesJegy}.`;
        visszajelzes.classList.remove('rossz-tipp');
        visszajelzes.classList.add('jo-tipp');

        // Helyes sz√°m megjelen√≠t√©se
        megjelenitSzam(helyesSzam, -1);

        // J√°t√©k v√©ge
        document.getElementById('jatek-terulet').style.display = 'none';
        jatekElkezdodott = false;

        setTimeout(() => {
            alert(`Sikeresen eltal√°ltad a sz√°mot ${tippSzamlalo} tippb≈ël!`);
        }, 100);

    } else {
        // Rossz tipp
        visszajelzes.textContent = '‚ùå Sajnos t√©ves! Pr√≥b√°ld √∫jra.';
        visszajelzes.classList.remove('jo-tipp');
        visszajelzes.classList.add('rossz-tipp');
    }

    tippInput.value = ''; // Tipp mez≈ë √ºr√≠t√©se
    tippInput.focus(); // F√≥kusz vissza√°ll√≠t√°sa
}

// Ind√≠t√°skor az √∫jJ√°t√©k megh√≠v√°sa
window.onload = ujJatek;